#!/usr/bin/env nodejs
var express = require('express');
var cookieParser = require('cookie-parser');
var url = require('url');
var i18n = require('i18n');
var path = require('path');
var fs = require('fs')

console.log("Running started");

var globalTranslate = {};

i18n.configure({
    locales: ['en', 'fa'],
    cookie: 'lang',
    defaultLocale: 'fa',
    register: globalTranslate,
    directory: __dirname + '/locales'
});

var app = express();
app.use(cookieParser());
app.use(i18n.init);

app.use(express.static('./'));
app.use('/fa', express.static('./nodeserve'));
app.use('/en', express.static('./nodeserve/'));
 
//app.use(express.static(__dirname + '/www'));
//app.use('/en', express.static('/nodeserve/'));
//app.use('/fa', express.static('../nodeserve/'));




app.get('/nodeserve/en', function (req, res) {
    res.cookie('lang', 'en', { maxAge: 900000, httpOnly: true });
    i18n.setLocale('en');

       setTimeout(function () {
             loadText(req, res)
      }, app.getDelay(req, res));
    //res.sendFile(path.join(__dirname + '/index.html'));

});

app.get('/nodeserve/fa', function (req, res) {
    res.cookie('lang', 'fa', { maxAge: 900000, httpOnly: true });
    i18n.setLocale('fa');

     setTimeout(function () {
           loadText(req, res)
     }, app.getDelay(req, res));
    //res.sendFile(path.join(__dirname + '/index.html'));

});

app.get('/nodeserve/', function (req, res) {
    console.log('mjh1');

    // delay a response to simulate a long running process,
    // while another request comes in with altered language settings
    //setTimeout(function () {
    loadText(req, res);
    //}, app.getDelay(req, res));
   // res.sendFile(path.join(__dirname + '/index.html'));

});

 // simple param parsing
app.getDelay = function (req, res) {
    return url.parse(req.url, true).query.delay || 0;
};


// startup
app.listen(8090);

function loadText(req, res) {

    console.log('mjh2')

    var allLocaleWords = globalTranslate.getCatalog()
    var result = '';

    fs.readFile(path.join(__dirname + '/index.html'), 'utf8', function (err, data) {
        if (err) {
            return console.log(err);
        }

 

        result = data+"";
        for (var item in allLocaleWords) {
            if(item!='---'){
            var replaceText = "{{'" + item + "' = translate}}";
            var regex = new RegExp(replaceText, "g");
            result=result.replace(regex, allLocaleWords[item]);
            }
        }

         result = result.replace(/{{lang}}/g, globalTranslate.getLocale());
        // result = result.replace(/{{lang}}/g, allLocaleWords['lang']);
        result = result.replace(/{{font}}/g, allLocaleWords['font']);
        result = result.replace(/{{direction}}/g, allLocaleWords['direction']);
        result = result.replace(/{{float}}/g, allLocaleWords['float']);
        result = result.replace(/{{h1}}/g, allLocaleWords['h1']);
        result = result.replace(/{{h2}}/g, allLocaleWords['h2']);
        result = result.replace(/{{h3}}/g, allLocaleWords['h3']);
        result = result.replace(/{{h4}}/g, allLocaleWords['h4']);
        result = result.replace(/{{h5}}/g, allLocaleWords['h5']);
        result = result.replace(/{{h6}}/g, allLocaleWords['h6']);

        if (allLocaleWords['float'] == 'left') {
            result = result.replace(/{{mirrorFloat}}/g, 'right');
        } else {
            result = result.replace(/{{mirrorFloat}}/g, 'left');
        }
        if (allLocaleWords['float'] == 'rtl') {
            result = result.replace(/{{mirrorDirection}}/g, 'ltr');
        } else {
            result = result.replace(/{{mirrorDirection}}/g, 'rtl');
        }

        if ((globalTranslate.getLocale() + "") == 'en') {
            result = result.replace(/{{otherlang}}/g, 'fa');
        } else {
            result = result.replace(/{{otherlang}}/g, 'en');
        }
 
       // res.render('index', { html: result })
        res.send(result);


        //var result = data.replace(/string to be replaced/g, 'replacement');

        //fs.writeFile(someFile, result, 'utf8', function (err) {
        //    if (err) return console.log(err);
        //});
    })


    //res.send('<body>' + i18n.__('title') + '</body>');
}
